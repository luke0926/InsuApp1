// <auto-generated />
using System;
using InsuApp1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InsuApp1.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230201115951_Adjustment")]
    partial class Adjustment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InsuApp1.Models.MainInsurance", b =>
                {
                    b.Property<int>("MainInsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MainInsuranceId"));

                    b.Property<string>("MainInsuranceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MainInsuranceId");

                    b.ToTable("MainInsurance");
                });

            modelBuilder.Entity("InsuApp1.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("InsuApp1.Models.UserDetailViewModel", b =>
                {
                    b.Property<int>("UserDetailViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserDetailViewId"));

                    b.Property<string>("InsuranceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsuranceValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InsuranceValidTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsuranceValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainInsuranceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectOfInsurane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserDetailViewUserId")
                        .HasColumnType("int");

                    b.HasKey("UserDetailViewId");

                    b.HasIndex("UserDetailViewUserId");

                    b.ToTable("UserDetailViewModel");
                });

            modelBuilder.Entity("InsuApp1.Models.UserInsurance", b =>
                {
                    b.Property<int>("UserInsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserInsuranceId"));

                    b.Property<string>("InsuranceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsuranceValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InsuranceValidTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsuranceValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectOfInsurance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserDetailViewModelUserDetailViewId")
                        .HasColumnType("int");

                    b.Property<int?>("UserUserInsuranceUserId")
                        .HasColumnType("int");

                    b.HasKey("UserInsuranceId");

                    b.HasIndex("UserDetailViewModelUserDetailViewId");

                    b.HasIndex("UserUserInsuranceUserId");

                    b.ToTable("UserInsurance");
                });

            modelBuilder.Entity("InsuApp1.Models.UserDetailViewModel", b =>
                {
                    b.HasOne("InsuApp1.Models.User", "UserDetailView")
                        .WithMany()
                        .HasForeignKey("UserDetailViewUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserDetailView");
                });

            modelBuilder.Entity("InsuApp1.Models.UserInsurance", b =>
                {
                    b.HasOne("InsuApp1.Models.UserDetailViewModel", null)
                        .WithMany("UserInsurances")
                        .HasForeignKey("UserDetailViewModelUserDetailViewId");

                    b.HasOne("InsuApp1.Models.User", "UserUserInsurance")
                        .WithMany()
                        .HasForeignKey("UserUserInsuranceUserId");

                    b.Navigation("UserUserInsurance");
                });

            modelBuilder.Entity("InsuApp1.Models.UserDetailViewModel", b =>
                {
                    b.Navigation("UserInsurances");
                });
#pragma warning restore 612, 618
        }
    }
}
